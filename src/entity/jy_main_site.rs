//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};
use crate::util::serialize_datetime;
use chrono::{DateTime,Utc};
#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize, Eq)]
#[sea_orm(table_name = "main_site")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(column_name = "merchant_id")]
    pub merchant_id: i32,
    pub store_id: i32,
    // pub p_id: i32,
    pub name: String,
    pub images: Option<Json>,
    pub rc_config: Option<Json>,
    pub status: i8,
    pub is_delete: i8,
    #[serde(serialize_with  = "serialize_datetime")]
    pub created_at: DateTime<Utc>,
    #[serde(serialize_with  = "serialize_datetime")]
    pub updated_at: DateTime<Utc>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::jy_main_store::Entity",
        from = "Column::StoreId",
        to = "super::jy_main_store::Column::Id"
    )]
    STORE
}
impl Related<super::jy_main_store::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::STORE.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
